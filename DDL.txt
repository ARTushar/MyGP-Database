CREATE TABLE USERS (
  MOBILE_NUMBER NUMBER PRIMARY KEY,
  BALANCE NUMBER NOT NULL,
  TOTAL_MB NUMBER,
  TOTAL_REWARD_POINT NUMBER,
  EMERGENCY_BALANCE_DUE NUMBER,
  USER_NAME VARCHAR(40) NOT NULL,
  TOTAL_TALK_TIME NUMBER,
  TOTAL_OFFER_SMS NUMBER,
  PACKAGE_ID NUMBER UNIQUE NOT NULL,
  STAR_ID NUMBER UNIQUE NOT NULL,
  CONSTRAINT PACKAGE_FK FOREIGN KEY (PACKAGE_ID)
    REFERENCES PACKAGE (PACKAGE_ID) ,
  CONSTRAINT STAR_FK FOREIGN KEY (STAR_ID)
    REFERENCES STAR (STAR_ID)
);

CREATE TABLE USER_VOUCHER (
  USER_ID NUMBER NOT NULL,
  VOUCHER_ID NUMBER PRIMARY KEY,
  CONSTRAINT USER_FK FOREIGN KEY (USER_ID)
    REFERENCES USERS (MOBILE_NUMBER)
);

CREATE TABLE LINK (
  LINKED_BY NUMBER NOT NULL,
  LINKED_TO NUMBER NOT NULL,
  PRIMARY KEY(LINKED_BY, LINKED_TO),
  CONSTRAINT LINKED_BY_FK FOREIGN KEY (LINKED_BY)
    REFERENCES USERS (MOBILE_NUMBER),
  CONSTRAINT LINKED_TO_FK FOREIGN KEY (LINKED_TO)
    REFERENCES USERS(MOBILE_NUMBER)
);

CREATE TABLE PACKAGE (
  PACKAGE_ID NUMBER PRIMARY KEY,
  PACKAGE_NAME VARCHAR (40) NOT NULL,
  CALL_RATE NUMBER NOT NULL,
  SMS_RATE NUMBER NOT NULL,
  FNF_LIMIT NUMBER NOT NULL
);

CREATE TABLE FNF (
  FNF_BY NUMBER NOT NULL,
  FNF_TO NUMBER NOT NULL,
  PRIMARY KEY(FNF_BY, FNF_TO),
  CONSTRAINT FNF_BY_FK FOREIGN KEY (FNF_BY)
    REFERENCES USERS (MOBILE_NUMBER),
  CONSTRAINT FNF_TO_FK FOREIGN KEY (FNF_TO)
    REFERENCES USERS(MOBILE_NUMBER)
);

CREATE TABLE PURCHASE_OFFER(
  USER_ID NUMBER NOT NULL,
  OFFER_ID NUMBER NOT NULL,
  PURCHASE_DATE NUMBER NOT NULL,
  PRIMARY KEY(USER_ID, OFFER_ID),
  CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID)
    REFERENCES USERS (MOBILE_NUMBER),
  CONSTRAINT OFFER_ID_FK FOREIGN KEY (OFFER_ID)
    REFERENCES OFFERS(OFFER_ID)
);

CREATE TABLE OFFERS (
  OFFER_ID NUMBER PRIMARY KEY,
  PRICE NUMBER,
  VALIDITY NUMBER NOT NULL,
  REWARD_POINTS NUMBER
);

CREATE TABLE REWARD_OFFER (
  POINTS_NEED NUMBER NOT NULL,
  MB_AMOUNT NUMBER NOT NULL
) INHERITS OFFERS;

CREATE TABLE SMS_OFFER
(
	SMS_AMOUNT NUMBER NOT NULL
) INHERITS OFFERS;

CREATE TABLE INTERNET_OFFER(
  DATA_AMOUNT NUMBER NOT NULL
) INHERITS OFFERS;

CREATE TABLE TALK_TIME_OFFER(
  TALK_TIME NUMBER NOT NULL
) INHERITS OFFERS;

CREATE GENERAL_OFFER (
  MUNITE NUMBER,
  MB_AMOUNT NUMBER,
  SMS_AMOUNT NUMBER
) INHERITS OFFERS;

CREATE TABLE HISTORY(
  H_DATE DATE NOT NULL,
  USER_ID NUMBER PRIMARY KEY,
  CONSTRAINT USER_FK FOREIGN KEY (USER_ID)
    REFERENCES USERS (MOBILE_NUMBER)
);

CREATE TABLE RECHARGE_HISTORY(
  AMOUNT NUMBER NOT NULL,
  VALIDITY NUMBER NOT NULL
) INHERITS HISTORY;

CREATE TABLE INTERNET_HISTORY(
  MB_USED NUMBER NOT NULL,
) INHERITS HISTORY;

CREATE TABLE SMS_HISTORY(
  SMS_NUMBER NUMBER NOT NULL,
  COST NUMBER NOT NULL,
  TYPE VARCHAR (40) NOT NULL
) INHERITS HISTORY;

CREATE TABLE CALL_HISTORY(
  CALL_NUMBER NUMBER NOT NULL,
  COST NUMBER NOT NULL,
  TYPE VARCHAR (40) NOT NULL
) INHERITS HISTORY;

CREATE TABLE EMERGENCY_BALANCE(
  USER_ID NUMBER PRIMARY KEY,
  AMOUNT NUMBER NOT NULL,
  TAKEN_DATE DATE NOT NULL,
  VALIDITY NUMBER NOT NULL,
  CONSTRAINT USER_FK FOREIGN KEY (USER_ID)
    REFERENCES USERS (MOBILE_NUMBER)
);

CREATE TABLE NOTIFICATIONS(
  USER_ID NUMBER PRIMARY KEY,
  MESSAGE VARCHAR (200) NOT NULL,
  CONSTRAINT USER_FK FOREIGN KEY (USER_ID)
    REFERENCES USERS (MOBILE_NUMBER)
);

CREATE TABLE VOUCHERS(
  VOUCHER_ID NUMBER PRIMARY KEY,
  CODE NUMBER NOT NULL,
  VALIDITY NUMBER NOT NULL,
  DESCRIPTION VARCHAR (200) NOT NULL
);

CREATE TABLE STAR (
  STAR_ID NUMBER PRIMARY KEY,
  TYPE VARCHAR (20) NOT NULL,
  AVERAGE_USES NUMBER NOT NULL,
  VALIDITY DATE NOT NULL
);

CREATE TABLE STARS_OFFER (
  OFFER_ID NUMBER PRIMARY KEY,
  OFFER_NAME VARCHAR(40) NOT NULL,
  TITLE VARCHAR (40) NOT NULL,
  DESCRIPTION VARCHAR (200),
  STAR_ID NUMBER NOT NULL,
  CONSTRAINT USER_FK FOREIGN KEY (STAR_ID)
    REFERENCES USERS (MOBILE_NUMBER)
);


